name: Comment on Unresolved Review Threads

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-unresolved-conversations:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - name: Check for unresolved threads by reviewer
        id: check-threads
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviewer = context.payload.review.user.login;
            
            const query = `
              query($owner: String!, $repo: String!, $number: Int!) {
                repository(owner: $owner, name: $repo) {
                  pullRequest(number: $number) {
                    reviewThreads(first: 20) {
                      nodes {
                        isResolved
                        comments(first: 1) {
                          nodes {
                            author {
                              login
                            }
                            body
                            url
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;
            
            const result = await github.graphql(query, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              number: prNumber
            });
            
            const threads = result.repository.pullRequest.reviewThreads.nodes;
            let myUnresolvedCount = 0;
            let threadList = '';
            
            for (const thread of threads) {
              if (!thread.isResolved && thread.comments.nodes.length > 0) {
                const firstComment = thread.comments.nodes[0];
                if (firstComment.author && firstComment.author.login === reviewer) {
                  myUnresolvedCount++;
                  if (myUnresolvedCount <= 8) {
                    const preview = firstComment.body.substring(0, 70);
                    threadList += `${myUnresolvedCount}. [View thread](${firstComment.url}) - ${preview}${preview.length >= 70 ? '...' : ''}\n`;
                  }
                }
              }
            }
            
            core.setOutput('hasUnresolvedThreads', myUnresolvedCount > 0 ? 'true' : 'false');
            core.setOutput('prNumber', prNumber.toString());
            core.setOutput('reviewer', reviewer);
            core.setOutput('unresolvedCount', myUnresolvedCount.toString());
            core.setOutput('threadList', threadList);
            core.setOutput('extraThreadsCount', Math.max(0, myUnresolvedCount - 8).toString());

      - name: Comment on PR to notify reviewer
        if: steps.check-threads.outputs.hasUnresolvedThreads == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ steps.check-threads.outputs.prNumber }}
          body: |
            @${{ steps.check-threads.outputs.reviewer }} You have approved this PR, but you also started ${{ steps.check-threads.outputs.unresolvedCount }} unresolved review thread(s). Please resolve your own conversations. Thank you!

            **Your unresolved review threads:**
            ${{ steps.check-threads.outputs.threadList }}${{ steps.check-threads.outputs.extraThreadsCount != '0' && format('*... and {0} more thread(s)*', steps.check-threads.outputs.extraThreadsCount) || '' }}
